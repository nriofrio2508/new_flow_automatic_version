# This is a basic workflow to help you get started with Actions

name: Deploy Multi release

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version Type'
        required: true
        type: choice
        options:
          - major
          - minor
          - patch

run-name:  Deploy Multi job by @${{ github.event.sender.type == 'Bot' && github.actor }}

jobs:
  get_dynamic_jobs:
    runs-on: ubuntu-latest
    outputs:
      jobs: ${{ steps.generate_matrix.outputs.jobs}}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get 3th level
        id: generate_matrix
        run: |
          BLACKLIST=("demo" "dominio1")
          BLACKLIST_PATTERN=$(IFS=\|; echo "${BLACKLIST[*]}")
          DIRECTORIES=$(find . -mindepth 3 -maxdepth 3 -type d | grep -E "^./(${BLACKLIST_PATTERN})/.*" | sed 's|^\./||')      
          DIRECTORIES_WITH=$(echo "$DIRECTORIES" | sed 's/\//-/g')
          JOBS="jobs=[$(echo "$DIRECTORIES_WITH" | sed 's/^/"/;s/$/"/' | tr '\n' ',')]"
          echo "$JOBS" >> "$GITHUB_OUTPUT"
      - name: print
        run: |
          echo ${{ steps.generate_matrix.outputs.jobs}}
      
  get_last_tag:
    uses: nriofrio2508/my_reusable/.github/workflows/get_next_candidate_release.yml@main
    strategy:
      fail-fast: false
      matrix:
        dominio: ${{ fromJSON(needs.get_dynamic_jobs.outputs.jobs) }}
    with:
      bundle_path: ${{ matrix.dominio }}
      version_type: ${{ inputs.version_type }}
      is_matrix: true

  validate_status_matrix_get_last_tag:
    needs: [get_last_tag]
    uses: nriofrio2508/my_reusable/.github/workflows/get_status_matrix.yml@main
    secrets: inherit
    with:
      status: "success"
      job_name: "get_last_tag"
    
  validate_deploy:
    needs: [get_last_tag,validate_status_matrix_get_last_tag,get_dynamic_jobs]
    strategy:
      fail-fast: false
      matrix:
        dominio: ${{ fromJSON(needs.get_dynamic_jobs.outputs.jobs) }}
    uses: nriofrio2508/my_reusable/.github/workflows/validate_deploy.yml@main
    secrets: inherit
    with:
      execute_matrix: ${{ contains(needs.validate_status_matrix_get_last_tag.outputs.matrix_status, matrix.dominio )}}


  validate_status_matrix_validate_deploy:
    needs: [validate_deploy]
    uses: nriofrio2508/my_reusable/.github/workflows/get_status_matrix.yml@main
    secrets: inherit
    with:
      status: "success"
      job_name: "validate_deploy"

  generate_pre_release:
    strategy:
      fail-fast: false
      matrix:
        dominio: ${{ fromJSON(needs.get_dynamic_jobs.outputs.jobs) }}
    needs: [validate_deploy, get_last_tag,get_dynamic_jobs,validate_status_matrix_get_last_tag,validate_status_matrix_validate_deploy] 
    uses: nriofrio2508/my_reusable/.github/workflows/generate_pre_release.yml@main
    with:
      execute_matrix: ${{ contains(needs.validate_status_matrix_validate_deploy.outputs.matrix_status, matrix.dominio )}}
      matrix_dominio: ${{ matrix.dominio }}
    secrets: inherit

  promote_prd:
    runs-on: ubuntu-latest
    needs: generate_pre_release
    environment: promote_prd
    steps:
      - name: Promote prd step
        run: echo "waiting approve"

  validate_status_matrix_generate_pre_release:
    needs: [promote_prd]
    uses: nriofrio2508/my_reusable/.github/workflows/get_status_matrix.yml@main
    secrets: inherit
    with:
      status: "success"
      job_name: "generate_pre_release"

  generate_release:
    strategy:
      fail-fast: false
      matrix:
        dominio: ${{ fromJSON(needs.get_dynamic_jobs.outputs.jobs) }}
    needs: [validate_status_matrix_generate_pre_release,get_last_tag,get_dynamic_jobs]
    uses: nriofrio2508/my_reusable/.github/workflows/generate_release.yml@main
    secrets: inherit
    with:
      execute_matrix: ${{ contains(needs.validate_status_matrix_generate_pre_release.outputs.matrix_status, matrix.dominio )}}
      matrix_dominio: ${{ matrix.dominio }}

  validate_deploy_prd:
    # The type of runner that the job will run on COMENTARIOS PARA 5
    runs-on: ubuntu-latest
    needs: generate_release
    steps:
      - name: Validate deploy prd
        run: echo "validate deploy PRD OK"
